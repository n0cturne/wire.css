// ----------------------
//
// HELPERS
//
// ----------------------
// ----------------------
// REM Calculation
// rem(value, size)
// Size attribute is optional
// ----------------------
@function rem($value, $base-value: $wire-font-size-base)  {
  $value: ($value / $wire-font-size-base) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

// ----------------------
// EMs Calculation
// em(value, size)
// Size attribute is optional
// ----------------------
@function em($value, $context: $wire-font-size-base) {
  @return #{1 / $context * $value}em;
}

// ----------------------
// Clearfix
// ----------------------
@mixin clearfix() {
  &:after,
  &:before{
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@if $wire-markup == true{
  .#{$wire-namespace}clearfix {
    @include clearfix();
  }
}

// ----------------------
// Center
// ----------------------
@mixin center() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@if $wire-markup == true {
  .#{$wire-namespace}center {
    @include center();
  }
}

// ----------------------
// Align
// ----------------------
$a-positions: left, center, right;
@each $a-position in $a-positions{
  @if $wire-markup == true {
    .#{$wire-namespace}align-#{$a-position} {
      text-align: $a-position;
    }
  }
}

// ----------------------
// Vertical Align
// ----------------------
$va-positions: top, bottom, middle;
@each $va-position in $va-positions{
  %va-#{$va-position}{
    vertical-align: $va-position;
  }
}

@if $wire-markup == true{
  @each $va-position in $va-positions{
    .va-#{$va-position}{
      @extend %va-#{$va-position};
    }
  }
}

// ----------------------
// Hidden
// ----------------------
%hidden {
  display: none !important;
  visibility: hidden;
}

@if $wire-markup == true{
  .hidden {
    @extend %hidden;
  }
}

// ----------------------
// Invisible
// ----------------------
%invisible {
  visibility : hidden;
}

@if $wire-markup == true{
  .invisible {
    @extend %invisible;
  }
}

// ----------------------
// Hide Text
// ----------------------
%hide-text {
  font-size: 0;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

@if $wire-markup == true{
  .hide-text {
    @extend %hide-text;
  }
}

// ----------------------
// List inline
// ----------------------
%list-inline {
  display: inline-block;
  margin-left: -5px;
  > li {
    display: inline-block;
    padding-left: 5px;
    padding-right: 5px;
  }
}

@if $wire-markup == true{
  .list--inline {
    @extend %list-inline;
  }
}

// ----------------------
// List unstyled
// ----------------------
%list-unstyled {
  list-style: none;
  padding-left: 0;
  margin: 0;
  ul {
    padding-left: 1em;
  }
  li {
    list-style: none
  }
}

@if $wire-markup == true{
  .list--unstyled {
    @extend %list-unstyled;
  }
}

// ----------------------
// Fixed
// ----------------------
[data-fixed] {
  position: relative;
  top: 0;
  //transition: top .25s ease;
}