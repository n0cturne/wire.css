/**
 * wire.css
 * @version    1.1.5
 * @homepage   http://wirecss.com
 * @author     Pedro Garcia <pedro@pedrogarcia.me> (http://pedrogarcia.me)
 * @license    Licensed under MIT
 */
// ----------------------
//
// IMPORTS
//
// ----------------------
// Variables
// ----------------------
//
// SETTINGS
//
// ----------------------
// ----------------------
// Namespace
//
// To avoid conflicts, Wire used custom namespace,
// Set 'wire-' to avoid conflicts with others frameworks. '' by default.
// ----------------------
$wire-namespace:     '' !default;

// ----------------------
// Markup Mode
//
// Compile Wire.css with markup, if you only need extend
// the styles in Sass, set this in 'false'.
// Set 'true' or 'false'. True by default.
// ----------------------
$wire-markup:        true !default;

// ----------------------
// Debug Mode
//
// Highlight markup errors.
// Set 'true' or 'false'. False by default.
// ----------------------
$wire-debug:         false !default;



// ----------------------
//
// VARIABLES
//
// ----------------------
// ----------------------
// Defaults Sizes (Base 10 to simplify)
// ----------------------
$wire-font-size-base: 16 !default;
$wire-line-height-base: 1.45 !default;

$wire-border-radius: 3px !default;

// ----------------------
// Colors
// ----------------------
// ----------------------
// Brand Colors
// ----------------------
$wire-color-primary: #48A8CE !default;
$wire-color-secundary: #7C7C7C !default;
$wire-color-alt: #E0E0E0 !default;

$wire-link-color: $wire-color-primary !default;
$wire-link-color-hover: darken($wire-color-primary, 30%) !default;

$wire-button-bg: $wire-color-primary !default;
$wire-button-color: #FFF !default;

$wire-button-alt-bg: $wire-color-alt !default;
$wire-button-alt-color: $wire-color-secundary !default;

$wire-form-input-border: #E0E0E0 !default;
$wire-form-input-bg: #FFF !default;

$wire-table-tr-even-bg: #E5E5E5 !default;
$wire-table-border-color: #D2D2D2 !default;

// ----------------------
// Grid
// ----------------------
$wire-max-columns: 12 !default;
$wire-base-gutter: 2% !default;

// ----------------------
// Breakpoints
// ----------------------
$wire-breakpoints: (
  "small": "screen and (max-width: 719px)",
  "retina": "(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dppx)",
  "medium": "screen and (min-width: 720px) and (max-width: 1023px)",
  "large": "screen and (min-width: 1024px)",
  "huge": "screen and (min-width: 1200px)"
) !default;


// Reset (Normalize)
/* ----------------------
//
// RESET (Normalize)
//
// ----------------------

/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */

html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove default margin.
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */

audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */

[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * Remove the gray background color from active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */

a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */

abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */

b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */

dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */

mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove border when inside `a` element in IE 8/9/10.
 */

img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * Address margin not present in IE 8/9 and Safari.
 */

figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */

hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */

pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */

/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */

/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */

button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */

button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */

button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */

button,
html input[type="button"], /* 1 */
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */

button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */

input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */

input[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  box-sizing: content-box; /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */

legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */

textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */

optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */

/**
 * Remove most spacing between table cells.
 */

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}


// Mixins
// ----------------------
//
// MIXINS
//
// ----------------------
// ----------------------
// Media Queries
// Use predefined breakpoints defined in $wire-breakpoints or use custom value
// mq(phone)
// mq(phone, landscape)
// mq(820px)
// mq(768px, 1024px, landscape)
// ----------------------
@mixin mq($min, $max: false, $orientation: false) {
  @if map-has-key($wire-breakpoints, $min) {
    @if not $orientation {
      @media #{map-get($wire-breakpoints, $min)} {
        @content;
      }
    } @else {
      @if map-has-key($wire-breakpoints, $min) {
        @media #{map-get($wire-breakpoints, $min)} and (orientation : $orientation) {
          @content;
        }
      }
    }
  } @else {
    @if not $max {
      @media (max-width: #{$min}) {
        @content;
      }
    } @else {
      @if not $orientation {
        @media (min-width: #{$min}) and (max-width: #{$max}) {
          @content;
        }
      } @else {
        @media (min-width: #{$min}) and (max-width: #{$max}) and (orientation: #{$orientation}) {
          @content;
        }
      }
    }
  }
}

// ----------------------
// FontFace
// fontface(name, filename, weight, style, stretch)
// ----------------------
@function font-url($path) {
  @return url('fonts/' + $path);
}

@mixin font-face($font-family, $font-filename, $font-weight : normal, $font-style :normal, $font-stretch : normal) {
  @font-face {
      font-family: '#{$font-family}';
      src: font-url('#{$font-filename}.eot');
      src: font-url('#{$font-filename}.eot?#iefix') format('embedded-opentype'),
      font-url('#{$font-filename}.woff') format('woff'),
      font-url('#{$font-filename}.ttf') format('truetype'),
      font-url('#{$font-filename}.svg##{$font-family}') format('svg');
      font-weight: $font-weight;
      font-style: $font-style;
      font-stretch: $font-stretch;
  }
}


// Helpers
// ----------------------
//
// HELPERS
//
// ----------------------
// ----------------------
// REM Calculation
// rem(value, size)
// Size attribute is optional
// ----------------------
@function rem($value)  {
  $value: ($value / 10) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

// ----------------------
// EMs Calculation
// em(value, size)
// Size attribute is optional
// ----------------------
@function em($value, $context: $wire-font-size-base) {
  @return #{$value / $context}em;
}

// ----------------------
// Clearfix
// ----------------------
@mixin clearfix() {
  &:after,
  &:before{
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@if $wire-markup == true{
  .#{$wire-namespace}clearfix {
    @include clearfix();
  }
}

// ----------------------
// Text Align
// ----------------------
$align-positions: left, center, right;
@each $align-position in $align-positions{
  @if $wire-markup == true {
    .#{$wire-namespace}align-#{$align-position} {
      text-align: $align-position;
    }
  }
}

// ----------------------
// Hidden
// ----------------------
%hidden {
  display: none !important;
  visibility: hidden;
}

@if $wire-markup == true{
  .hidden {
    @extend %hidden;
  }
}

// ----------------------
// Invisible
// ----------------------
%invisible {
  visibility : hidden;
}

@if $wire-markup == true{
  .invisible {
    @extend %invisible;
  }
}

// ----------------------
// Show Elements on Device
// ----------------------
@each $breakpoint, $value in $wire-breakpoints {
  @include mq($breakpoint) {
    @if $wire-markup == true {
      .#{$wire-namespace}visible-#{$breakpoint} {
        display: block !important;
      }
    }
  }
}

// ----------------------
// Hide Elements on Device
// ----------------------
@each $breakpoint, $value in $wire-breakpoints {
  @include mq($breakpoint) {
    @if $wire-markup == true {
      .#{$wire-namespace}hidden-#{$breakpoint} {
        display: none !important;
      }
    }
  }
}

// ----------------------
// Fixed
// ----------------------
[data-fixed] {
  position: relative;
  top: 0;
  //transition: top .25s ease;
}


// Global
// ----------------------
//
// Base
//
// ----------------------
html {
  box-sizing: border-box;
  height: 100%;
  font-size: 62.5%;
}

body {
  height: 100%;
  font-size: rem(16);
  line-height: $wire-line-height-base;
}

*, *:before, *:after {
  box-sizing: inherit;
}



// Components
// ----------------------
//
// BUTTONS
//
// ----------------------

// ----------------------
// Button
// ----------------------
%button{
  color: $wire-button-color;
  background-color: $wire-button-bg;
  border: 0;
  border-radius: $wire-border-radius;
  line-height: inherit;
  display: inline-block;
  vertical-align: bottom;
  text-align: center;
  padding: em(7, 10) em(14, 10);
  transition: background-color .2s ease-out;
  &:hover {
    color: #FFF;
    background-color: darken($wire-button-bg, 15%);
  }
  &.small {
    font-size: rem(12);
  }
  &.large {
    font-size: rem(18);
  }
  &.x-large {
    font-size: rem(24);
  }
  &.alt {
    color: $wire-button-alt-color;
    background-color: $wire-button-alt-bg;
    &:hover {
      background-color: darken($wire-button-alt-bg, 15%);
    }
  }
}

@if $wire-markup == true{
  .#{$wire-namespace}button,
  .#{$wire-namespace}btn,
  input[type="submit"],
  input[type="button"] {
      @extend %button;
  }
  input[type="submit"][disabled],
  input[type="button"][disabled],
  .#{$wire-namespace}button[disabled],
  .#{$wire-namespace}btn[disabled],
  .#{$wire-namespace}button.disabled,
  .#{$wire-namespace}btn.disabled {
    cursor: not-allowed;
    color: lighten($wire-button-alt-color, 5.5%);
    background-color: lighten($wire-button-alt-bg, 5.5%);
    &:hover {
      color: lighten($wire-button-alt-color, 5.5%);
      background-color: lighten($wire-button-alt-bg, 5.5%);
    }
  }
}

// ----------------------
//
// Grid
//
// Content:
// - Core definition
// - Direction
// - Wrap
// - Align
// - column Align
// ----------------------

@mixin container() {
  width: 100%;
  height: 100%;
  &:before,
  &:after {
    display: table;
    content: " ";
  }
  &:after{
    clear: both;
  }
}

@if $wire-markup == true {
  .#{$wire-namespace}container {
    @include container();
  }
}

[class*="col-"] {
  box-sizing: border-box;
  width: 100%;
}


// $Grid
// Core Grid
@mixin grid() {
  display: flex;
  flex-wrap: wrap;
}

@if $wire-markup == true {
  .#{$wire-namespace}grid,
  [data-grid] {
    @include grid();
  }
}

// $Direction
// Row
@mixin grid-row() {
  flex-direction: row;
}

@if $wire-markup == true {
  [data-grid~="row"],
  .#{$wire-namespace}grid--row {
    @include grid-row();
  }
}

@mixin grid-row-reverse() {
  flex-direction: row-reverse;
}

@if $wire-markup == true {
  [data-grid~="row-reverse"],
  .#{$wire-namespace}grid--row-reverse {
    @include grid-row-reverse();
  }
}

@mixin grid-column() {
  flex-direction: column;
}

@if $wire-markup == true {
  [data-grid~="column"],
  .#{$wire-namespace}grid--column {
    @include grid-column();
  }
}

@mixin grid-column-reverse() {
  flex-direction: column-reverse;
}

@if $wire-markup == true {
  [data-grid~="column-reverse"],
  .#{$wire-namespace}grid--column-reverse {
    @include grid-column-reverse();
  }
}

// $Wrap
// Wrap
@mixin grid-wrap() {
  flex-wrap: wrap;
}

@if $wire-markup == true {
  [data-grid~="wrap"],
  .#{$wire-namespace}grid--wrap {
    @include grid-wrap();
  }
}

// Wrap Reverse
@mixin grid-wrap-reverse() {
  flex-wrap: wrap-reverse;
}

@if $wire-markup == true {
  [data-grid~="wrap-reverse"],
  .#{$wire-namespace}grid--wrap-reverse {
    @include grid-wrap-reverse();
  }
}

// Nowrap
@mixin grid-nowrap() {
  flex-wrap: nowrap;
}

@if $wire-markup == true {
  [data-grid~="nowrap"],
  .#{$wire-namespace}grid--nowrap {
    @include grid-nowrap();
  }
}

// $Align
// Left
@mixin grid-left() {
  justify-content: flex-start;
}

@if $wire-markup == true {
  [data-grid~="left"],
  .#{$wire-namespace}grid--left {
    @include grid-left();
  }
}

// Right
@mixin grid-right() {
  justify-content: flex-end;
}

@if $wire-markup == true {
  [data-grid~="right"],
  .#{$wire-namespace}grid--right {
    @include grid-right();
  }
}

// Center
@mixin grid-center() {
  justify-content: center;
}

@if $wire-markup == true {
  [data-grid~="center"],
  .#{$wire-namespace}grid--center {
    @include grid-center();
  }
}

// Space Between
@mixin grid-between() {
  justify-content: space-between;
}

@if $wire-markup == true {
  [data-grid~="space-between"],
  .#{$wire-namespace}grid--between {
    @include grid-between();
  }
}

// Space Around
@mixin grid-around() {
  justify-content: space-around;
}

@if $wire-markup == true {
  [data-grid~="space-around"],
  .#{$wire-namespace}grid--around {
    @include grid-around();
  }
}

// $column Align
// Top
@mixin grid-va-top() {
  align-items: flex-start;
}

@if $wire-markup == true {
  [data-grid~="va-top"],
  .#{$wire-namespace}grid--va-top {
    @include grid-va-top();
  }
}

// Bottom
@mixin grid-va-bottom() {
  align-items: flex-end;
}

@if $wire-markup == true {
  [data-grid~="va-bottom"],
  .#{$wire-namespace}grid--va-bottom {
    @include grid-va-bottom();
  }
}

// Center
@mixin grid-va-center() {
  align-items: center;
}

@if $wire-markup == true {
  [data-grid~="va-center"],
  .#{$wire-namespace}grid--va-center {
    @include grid-va-center();
  }
}

// Baseline
@mixin grid-va-baseline() {
  align-content: baseline;
}

@if $wire-markup == true {
  [data-grid~="va-baseline"],
  .#{$wire-namespace}grid--va-baseline {
    @include grid-va-baseline();
  }
}

// Stretch
@mixin grid-va-stretch() {
  align-content: stretch;
}

@if $wire-markup == true {
  [data-grid~="va-stretch"],
  .#{$wire-namespace}grid--va-stretch {
    @include grid-va-stretch();
  }
}

// $Content Align
// Stretch
@mixin grid-ca-stretch() {
  align-content: stretch;
}

@if $wire-markup == true {
  [data-grid~="ca-stretch"],
  .#{$wire-namespace}grid--ca-stretch {
    @include grid-ca-stretch();
  }
}

// Top
@mixin grid-ca-top() {
  align-content: flex-start;
}

@if $wire-markup == true {
  [data-grid~="ca-top"],
  .#{$wire-namespace}grid--ca-top {
    @include grid-ca-top();
  }
}

// Bottom
@mixin grid-ca-bottom() {
  align-content: flex-end;
}

@if $wire-markup == true {
  [data-grid~="ca-bottom"],
  .#{$wire-namespace}grid--ca-bottom {
    @include grid-ca-bottom();
  }
}

// Center
@mixin grid-ca-center() {
  align-content: center;
}

@if $wire-markup == true {
  [data-grid~="ca-center"],
  .#{$wire-namespace}grid--ca-center {
    @include grid-ca-center();
  }
}

// Space Around
@mixin grid-ca-space-around() {
  align-content: space-around;
}

@if $wire-markup == true {
  [data-grid~="ca-space-around"],
  .#{$wire-namespace}grid--ca-space-around {
    @include grid-ca-space-around();
  }
}

// Space Between
@mixin grid-ca-space-between() {
  align-content: space-between;
}

@if $wire-markup == true {
  [data-grid~="ca-space-between"],
  .#{$wire-namespace}grid--ca-space-between {
    @include grid-ca-space-between();
  }
}


// Grid Helpers
// Center - Center
// Center vertical and horizontal
@mixin grid-center-center() {
  justify-content: center;
  align-content: center;
  align-items: center;
  min-height: 100%;
  > * {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
}

@if $wire-markup == true {
  [data-grid~="center-center"],
  .#{$wire-namespace}grid--center-center {
    @include grid-center-center();
  }
}

// Order
@mixin order($position, $force: false) {
  @if $force == true {
      order: $position !important;
  } @else {
      order: $position;
  }
}

// Push Left
@mixin push-left() {
  @include order(-100, true);
}

%push-left {
  @include push-left;
}
@if $wire-markup == true {
  .push-left {
      @extend %push-left;
  }
}

// Push Right
@mixin push-right() {
  @include order(100, true);
}

%push-right {
  @include push-right;
}
@if $wire-markup == true {
  .push-right {
      @extend %push-right;
  }
}

// $Core Width
@for $col from 1 through ($wire-max-columns) {
  @mixin columns($col) {
    width: $col * 100% / $wire-max-columns;
  }
  %col-#{$col} {
    @include columns($col);
  }
  @if $wire-markup == true {
    .#{$wire-namespace}col-#{$col},
    [data-col~="#{$col}"] {
      @include columns($col);
      @include mq(small) {
        width: 100%;
      }
    }
  }
}

@for $cols from 1 through ($wire-max-columns) {
  @each $breakpoint, $value in $wire-breakpoints {
    @include mq($breakpoint) {
      @if $wire-markup == true {
        .#{$wire-namespace}col-#{$breakpoint}-#{$cols},
        [data-col-#{$breakpoint}~="#{$cols}"] {
          padding-left: ($wire-base-gutter / 2);
          padding-right: ($wire-base-gutter / 2);
          width: $cols * 100% / $wire-max-columns;
        }
      }
    }
  }
}

@for $cols from 1 through ($wire-max-columns) {
  %col-offset-#{$cols} {
    margin-left: $cols * 100% / $wire-max-columns;
  }

  @if $wire-markup == true {
    .#{$wire-namespace}col-offset-#{$cols} {
      @extend %col-offset-#{$cols};
    }
  }
}

// $Grid Row
@mixin row() {
  @include grid;
}

@if $wire-markup == true {
  .#{$wire-namespace}row {
    @include row();
  }
}

// ----------------------
//
// Typography
//
// ----------------------
// ----------------------
// Headings
// ----------------------
.h1, .h2, .h3, .h4, .h5, .h6,
h1, h2, h3, h4, h5, h6 {
  font-weight: 600;
  margin-top: 0;
  margin-bottom: 1rem;
}

h1, .h1 {
  font-size: rem(36);
  line-height: 1.3;
}

h2, .h2 {
  font-size: rem(30);
  line-height: 1.35;
}

h3, .h3 {
  font-size: rem(24);
  line-height: 1.45;
}

h4, .h4 {
  font-size: rem(18);
  line-height: 1.6;
}

h5, .h5 {
  font-size: rem(14);
  line-height: 1.75;
}

h6, .h6 {
  font-size: rem(12);
  line-height: 1.9;
}

// ----------------------
// Mark
// ----------------------
mark {
  background: rgba($wire-color-primary, .16);
  padding: .2em;
}

// ----------------------
// Links
// ----------------------
a {
  color: $wire-link-color;
  text-decoration: none;
  &:hover,
  &:active {
    color: $wire-link-color-hover;
  }
}

// ----------------------
//
// Forms
//
// ----------------------

@if $wire-markup == true {
  .#{$wire-namespace}form {
    &[data-form~="horizontal"] {
      @include grid();
      @include grid-va-bottom();
      .field {
        padding-right: $wire-base-gutter;
        &:last-child {
          padding-right: 0;
        }
      }
    }
    ul {
      @extend %list-unstyled;
    }
    .row {
      @include grid();
      .field {
        padding-left: $wire-base-gutter;
        padding-right: $wire-base-gutter;
        @include mq(small) {
          padding-left: 0;
          padding-right: 0;
        }
        &:first-child {
          padding-left: 0;
        }
        &:last-child {
          padding-right: 0;
        }
      }
    }
    .field {
      margin-bottom: 1em;
      label {
        display: inline-block;
        margin-bottom: .3rem;
      }
      input[type="email"],
      input[type="password"],
      input[type="search"],
      input[type="text"],
      input[type="tel"],
      input[type="url"],
      select {
        background: $wire-form-input-bg;
        border: 1px solid $wire-form-input-border;
        border-radius: 3px;
        padding: .5em;
        height: rem(38);
        width: 100%;
        transition: border-color .20s ease-in-out;
        &:focus {
          border-color: darken($wire-form-input-border, 25%);
          outline: none;
        }
      }
      textarea {
        @extend input[type="text"];
        height: auto;
      }
      input[type="checkbox"],
      input[type="radio"] {
        &:focus {
          border-color: darken($wire-form-input-border, 25%);
          outline: none;
        }
        + label {
          margin-left: .25rem;
          max-width: 88%;
          vertical-align: top;
        }
      }
    }
  }
}

// ----------------------//// List//// ----------------------// ----------------------// Definition list// ----------------------dl {	dt {		font-weight: 700;	}	dd {		margin-left: 0;	}	&.list--horizontal {		@include grid();		dt {			text-align: left;			padding-right: 1em;			width: 30%;		}		dd {			width: 70%;		}	}}// ----------------------// List inline// ----------------------%list-inline {	display: inline-block;	padding: 0;  > li {    display: inline-block;    padding-left: 5px;    padding-right: 5px;		&:first-child {			padding-left: 0;		}		&:last-child {			padding-right: 0;		}  }}@if $wire-markup == true{  .list--inline {    @extend %list-inline;  }}// ----------------------// List unstyled// ----------------------%list-unstyled {  list-style: none;  padding: 0;  margin: 0;  ul {    padding: 0;  }  li {    list-style: none  }}@if $wire-markup == true{  .list--unstyled {    @extend %list-unstyled;  }}
// ----------------------//// Tables//// ----------------------table {	width: 100%;	th,	td {		padding: .5em;	}	th {		text-align: left;	}	thead {		th {			border-bottom: 1px solid $wire-table-border-color;		}	}	tfoot {		border-top: 1px solid $wire-table-border-color;	}	@include mq(small) {		&[data-table~="responsive"] {			thead,			th {				display: none;			}			tbody {				tr {					display: block;					border-bottom: 1px solid $wire-table-border-color;					&:last-child {						border-bottom: 0;					}				}				td {					display: block;					margin-left: 8em;					&::before {						content: attr(data-th) ": ";						font-weight: 700;						display: inline-block;						margin-left: -8em;						min-width: 8em;					}				}			}			tfoot {				td {					display: block;				}			}		}	}	&[data-table~="striped"] {		tr {			&:nth-child(even) {				background: $wire-table-tr-even-bg;			}		}	}}
// ----------------------//// Images//// ----------------------img {	max-width: 100%;	width: 100%;  &.fixed {    width: auto;  }	&.border {		padding: .2em;		border: 1px solid $wire-color-alt;	}	&.round {		border-radius: 100%;	}}

// Debug
@if $wire-debug == true {
/* ----------------------
//
// DEBUG
// Enable this to visually detect incorrect markup.
//
// ---------------------- */
// ----------------------
// Empty Elements
// ----------------------
:empty{
    outline: 5px solid yellow;
}


// ----------------------
// Images
// ----------------------
img{
    outline:5px solid red;
    &[alt]{
        outline: none;
    }
    &[alt=""]{
        outline:5px solid yellow;
    }
}


// ----------------------
// Links
// ----------------------
a{
    outline:5px solid yellow;
    &[title]{
        outline: none;
    }
    &[href="#"],
    &[href*="javascript"]{
        outline: 5px solid yellow;
    }
    &[target]{
        outline: 5px solid yellow;
    }
}


// ----------------------
// Lists
// ----------------------
ul,
ol{
    > *:not(li){
        outline: 5px solid red;
    }
}


// ----------------------
// Tables
// ----------------------
th{
    outline: 5px solid yellow;
}
th[scope]{
    outline: none;
}

// Tfoot in correct order
tbody + tfoot{
    outline: 5px solid yellow;
}

// Put tbody or thead
table > tr{
    outline: 5px solid yellow;
}


// ----------------------
// Forms
// ----------------------
form{
    outline: 5px solid red;
    &[action]{
        outline: none;
    }
}


// ----------------------
// Form Fields
// ----------------------
textarea,
input{
    outline: 5px solid red;
}
input[type]{
    outline: none;
}
textarea[rows][cols]{
    outline: none;
}
input[type=submit]{
    outline: 5px solid red;
}
input[type=submit][value]{
    outline: none;
}


// ----------------------
// Remove inline styles if posible.
// ----------------------
[style]{
    outline: 5px solid yellow;
}


// ----------------------
// No ID's for CSS
// ----------------------
[id]{
    outline: 5px solid yellow;
}
}

